{"version":3,"sources":["actions/register.js","reducers/register.reducer.js","utils/LocalStorage.js","utils/authAxios.js","actions/account.js","reducers/account.reducer.js","actions/game.js","reducers/withBot.reducer.js","actions/gameWithHuman.js","reducers/withHuman.reducer.js","constants/constants.js","reducers/index.js","store.js","utils/axios.config.js","components/login_register/Register.js","containers/RegisterContainer.js","components/login_register/Login.js","containers/LoginContainer.js","layout/PrivateRoute.js","containers/PrivateRouteContainer.js","layout/AccountLayout.js","components/account/UpdateInfo.js","containers/UpdateInfoContainer.js","components/account/ChangePassword.js","containers/ChangePasswordContainer.js","components/account/UploadAvatar.js","containers/UploadAvatarContainer.js","scenes/AccountScene.js","components/nav/NavBar.js","containers/NavBarContainer.js","layout/LayoutPage.js","algorithms/boardChecking.js","components/game/Line.js","components/game/Cell.js","containers/CellContainer.js","components/game/Board.js","components/game/History.js","components/game/Game.js","algorithms/AI.js","containers/GameContainer.js","socketio/index.js","components/game/IndexPage.js","containers/GameIndexContainer.js","components/chat/FormInput.js","containers/FormChatContainer.js","components/chat/DisplayChats.js","containers/DisplayChatContainer.js","components/chat/Chat.js","components/game/GameWithHuman.js","containers/GameWithHumanContainer.js","scenes/GameScene.js","App.js","index.js"],"names":["START_REGISTER","END_REGISTER","REGISTER_ERROR","register","user","dispatch","type","Axios","post","then","response","data","success","attributes","catch","error","errors","initialState","isFetching","email","registration","state","action","getToken","localStorage","getItem","getUser","token","jwt","decode","id","setToken","setItem","removeToken","removeItem","createInstance","LocalStorage","axios","create","headers","Authorization","START_LOGIN","END_LOGIN","LOGIN_ERROR","LOGOUT","START_FETCH_USER","STOP_FETCH_USER","FETCH_ERROR","CLEAR_NOTIFICATIONS","SAVE_USER_FROM_TOKEN","startFetch","stopFetch","fetchError","clearNotifications","saveUserFromToken","userFromToken","payload","login","axiosIns","account","MARK","RESET_GAME","JUMP_TO","mark","row","col","player","xIsNext","list","board","Array","fill","map","lastPosition","step","game","arr","slice","concat","x","y","SET_ISFETCHING","ADD_MESSAGE","SET_ROOM","CLEAR_MATCH","FETCH_GAME_DATA","messages","roomID","gameWithHuman","status","messageItem","historyRoute","combineReducers","router","connectRouter","history","createBrowserHistory","middlewares","thunkMiddleware","routerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaults","baseURL","process","WrappedRegisterForm","Form","name","form","document","title","getFieldDecorator","handleSubmit","event","validateFields","getFieldValue","preventDefault","err","password","retype","sex","className","style","minHeight","innerHeight","justify","xs","md","lg","marginTop","spinning","Title","level","textAlign","message","description","closable","e","layout","onSubmit","Item","required","hasFeedback","rules","min","prefix","color","placeholder","pattern","validator","rule","value","callback","initialValue","Option","marginBottom","block","size","htmlType","onClick","display","to","RegisterContainer","connect","WrappedLogin","loginWithGg","loginWithFb","useEffect","pathname","gutter","span","theme","LoginContainer","clearMessage","PrivateRoute","children","rest","antIcon","fontSize","spin","tip","indicator","render","PrivateRouteContainer","Sider","Layout","Content","AccountLayout","location","useLocation","url","useRouteMatch","overflow","height","position","left","mode","defaultSelectedKeys","selectedKeys","borderRight","key","from","marginLeft","margin","WrappedUpdateInfo","update","address","setTimeout","loading","maxWidth","boxShadow","shortId","generate","code","showIcon","labelCol","wrapperCol","label","disabled","toString","sm","offset","UpdateInfoContainer","userInToken","patch","push","updateUserInfo","UpdateInfo","WrappedChangePassword","changePassword","currentPw","newPassword","cb","ChangePasswordContainer","ChangePassword","UploadAvatar","uploadAvatar","props","customRequest","file","onError","onProgress","onSuccess","shape","src","avatar","Dragger","accept","UploadAvatarContainer","formData","FormData","append","Accept","onUploadProgress","progressEvent","percent","Math","round","loaded","total","AccountScene","path","padding","exact","subTitle","extra","NavBar","logOut","lineHeight","handleLogout","NavBarContainer","Header","LayoutPage","zIndex","width","isFull","every","cell","Line","pointStart","pointEnd","cellWidth","playerDisplay","pStart","pEnd","d","Cell","val","stop","defaultProps","Board","winner","listPoints","iRow","uuidv1","iCol","CellContainer","el","cellStart","querySelector","cellEnd","offsetLeft","offsetTop","offsetWidth","History","jumpTo","toggleSort","selected","sort","moves","idx","desc","isSelect","reverse","sortIcon","icon","maxHeight","overflowX","split","Game","resetGame","hasWinner","useState","open","setOpen","sortASC","setSort","points","checkingResult","retH","isBlockOutAbove","isBlockOutBelow","curPlayer","count","i","p1","p2","splice","length","checkingHorizontal","retV","checkingVertical","retM","j","checkingMainDiagonal","retS","checkingSubDiagonal","isTerminated","pos","floor","random","generatePosition","flexGrow","align","strPlayer","showPlayer","Modal","confirm","content","okText","cancelTextokText","onOk","onCancel","text","visible","cancelButtonProps","showResult","GameContainer","socket","io","IndexPage","setRoom","s","socketio","emit","off","matchMaking","setMatchMaking","on","delay","justifyContent","hoverable","cover","alt","WrappedFormInput","addMessage","resetFields","msg","userID","autoComplete","marginRight","DisplayChats","itemLayout","overflowY","item","ChatBox","DisplayChatContainer","FormChatContainer","GameWithHuman","clearMatch","fetchGameData","setFetching","setWinner","winnerText","setWinnerText","askModal","setAskModal","winnerID","winnerChar","handleBtnDraw","isAccepted","Chat","backgroundColor","fontWeight","cancelText","GameScene","GameIndexContainer","GameWithHumanContainer","App","preloadedState","component","store","createStore","rootReducer","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f0477246.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nexport const START_REGISTER = 'START_REGISTER';\r\nexport const END_REGISTER = 'END_REGISTER';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\n\r\nexport function startRegister() {\r\n  return { type: START_REGISTER };\r\n}\r\n\r\nexport function endRegister(data, success) {\r\n  return { type: END_REGISTER, data, success };\r\n}\r\n\r\nexport function registerError(errors) {\r\n  return { type: REGISTER_ERROR, errors };\r\n}\r\n\r\nexport function register(user) {\r\n  return dispatch => {\r\n    dispatch(startRegister());\r\n\r\n    // call api\r\n    return Axios.post('/api/v1/users', user)\r\n      .then(response => {\r\n        dispatch(endRegister(response.data.attributes, response.data.success));\r\n      })\r\n      .catch(error => {\r\n        dispatch(registerError(error.response.data.errors));\r\n      });\r\n  };\r\n}\r\n","import {\n  START_REGISTER,\n  END_REGISTER,\n  REGISTER_ERROR\n} from '../actions/register';\n\nconst initialState = {\n  isFetching: false,\n  user: {\n    email: null\n  },\n  success: null,\n  errors: null\n};\n\nexport default function registration(state = initialState, action) {\n  switch (action.type) {\n    case START_REGISTER:\n      return { ...state, isFetching: true, errors: null, success: null };\n    case END_REGISTER:\n      return {\n        ...state,\n        isFetching: false,\n        user: action.data,\n        success: action.success\n      };\n    case REGISTER_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        errors: action.errors\n      };\n    default:\n      return state;\n  }\n}\n","import jwt from 'jsonwebtoken';\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem('token');\r\n};\r\nconst setToken = token => {\r\n  localStorage.setItem('token', token);\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.removeItem('token');\r\n};\r\n\r\nconst getUser = () => {\r\n  const token = getToken();\r\n\r\n  if (!token) return null;\r\n\r\n  const user = jwt.decode(token);\r\n\r\n  if (!user || (user && !user.id)) {\r\n    return null;\r\n  }\r\n\r\n  return user;\r\n};\r\n\r\nexport default { getUser, getToken, setToken, removeToken };\r\n","import axios from 'axios';\r\nimport LocalStorage from './LocalStorage';\r\n\r\nfunction createInstance() {\r\n  const user = LocalStorage.getUser();\r\n\r\n  if (!user || !user.id) {\r\n    LocalStorage.removeToken();\r\n  }\r\n\r\n  const token = LocalStorage.getToken();\r\n\r\n  const instance = axios.create({\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport default { createInstance };\r\n","import jwt from 'jsonwebtoken';\r\nimport { push } from 'connected-react-router';\r\nimport FormData from 'form-data';\r\nimport axiosIns from '../utils/authAxios';\r\nimport LocalStorage from '../utils/LocalStorage';\r\n\r\nexport const START_LOGIN = 'START_LOGIN';\r\nexport const END_LOGIN = 'END_LOGIN';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const START_FETCH_USER = 'START_FETCH_USER';\r\nexport const STOP_FETCH_USER = 'STOP_FETCH_USER';\r\nexport const FETCH_ERROR = 'FETCH_ERROR';\r\nexport const CLEAR_NOTIFICATIONS = 'CLEAR_NOTIFICATIONS';\r\nexport const SAVE_USER_FROM_TOKEN = 'SAVE_USER_FROM_TOKEN';\r\n\r\nexport function startFetch() {\r\n  return { type: START_FETCH_USER };\r\n}\r\nexport function stopFetch(data, success) {\r\n  if (data.token) {\r\n    const { token } = data;\r\n    LocalStorage.setToken(token);\r\n  }\r\n  return { type: STOP_FETCH_USER, data: null, success };\r\n}\r\n\r\nexport function fetchError(errors) {\r\n  return { type: FETCH_ERROR, errors };\r\n}\r\n\r\nexport function startLogin() {\r\n  return { type: START_LOGIN };\r\n}\r\n\r\nexport function endLogin(success) {\r\n  return { type: END_LOGIN, success };\r\n}\r\n\r\nexport function loginError(errors) {\r\n  return { type: LOGIN_ERROR, errors };\r\n}\r\n\r\nexport function clearNotifications() {\r\n  return { type: CLEAR_NOTIFICATIONS };\r\n}\r\n\r\n// //////////////////////////////////////////////////////////////////////////\r\n//                              MIDDLEWARES                               //\r\n// ////////////////////////////////////////////////////////////////////////\r\n\r\nexport function saveUserFromToken() {\r\n  const userFromToken = LocalStorage.getUser();\r\n\r\n  return { type: SAVE_USER_FROM_TOKEN, payload: userFromToken };\r\n}\r\n\r\nexport function login(user) {\r\n  return dispatch => {\r\n    dispatch(startLogin());\r\n\r\n    // call api\r\n    return axiosIns\r\n      .createInstance()\r\n      .post('/api/v1/users/login', user)\r\n      .then(response => {\r\n        const { token } = response.data;\r\n        // set token to localstorage\r\n        LocalStorage.setToken(token);\r\n\r\n        dispatch(saveUserFromToken());\r\n\r\n        dispatch(endLogin(null));\r\n      })\r\n      .catch(error => {\r\n        dispatch(loginError(error.response.data.errors));\r\n      });\r\n  };\r\n}\r\n\r\nexport function logOut() {\r\n  return { type: LOGOUT };\r\n}\r\n\r\nexport function updateUserInfo(user) {\r\n  return dispatch => {\r\n    dispatch(startFetch());\r\n\r\n    // tach token -> lay id\r\n    const token = LocalStorage.getToken();\r\n    const userInToken = jwt.decode(token);\r\n\r\n    if (!token || !userInToken || !userInToken.id) {\r\n      LocalStorage.removeToken();\r\n      dispatch(\r\n        fetchError([{ message: 'Not Authenticated! Redirecting to login...' }])\r\n      );\r\n      dispatch(clearNotifications());\r\n      dispatch(push('/login'));\r\n      return {};\r\n    }\r\n\r\n    const axiosInstance = axiosIns.createInstance();\r\n\r\n    return axiosInstance\r\n      .patch(`/api/v1/users/${userInToken.id}`, user)\r\n      .then(response => {\r\n        dispatch(stopFetch(response.data.attributes, response.data.success));\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status === 401) {\r\n          LocalStorage.removeToken();\r\n        }\r\n        dispatch(fetchError(err.response.data.errors));\r\n      });\r\n  };\r\n}\r\n\r\nexport function changePassword(user) {\r\n  return dispatch => {\r\n    dispatch(startFetch());\r\n\r\n    // tach token -> lay id\r\n    const token = LocalStorage.getToken();\r\n    const userInToken = jwt.decode(token);\r\n\r\n    if (!token || !userInToken || !userInToken.id) {\r\n      LocalStorage.removeToken();\r\n      dispatch(\r\n        fetchError([{ message: 'Not Authenticated! Redirecting to login...' }])\r\n      );\r\n      dispatch(clearNotifications());\r\n      dispatch(push('/login'));\r\n      return {};\r\n    }\r\n\r\n    const axiosInstance = axiosIns.createInstance();\r\n\r\n    return axiosInstance\r\n      .patch(`/api/v1/users/${userInToken.id}/password`, user)\r\n      .then(response => {\r\n        dispatch(stopFetch(response.data.attributes, response.data.success));\r\n      })\r\n      .catch(err => {\r\n        if (err.response.status === 401) {\r\n          LocalStorage.removeToken();\r\n        }\r\n        dispatch(fetchError(err.response.data.errors));\r\n      });\r\n  };\r\n}\r\n\r\nexport function uploadAvatar(file, onProgress, onSuccess, onError) {\r\n  return dispatch => {\r\n    dispatch(startFetch());\r\n\r\n    // tach token -> lay id\r\n    const token = LocalStorage.getToken();\r\n    const userInToken = jwt.decode(token);\r\n\r\n    if (!token || !userInToken || !userInToken.id) {\r\n      LocalStorage.removeToken();\r\n      dispatch(\r\n        fetchError([{ message: 'Not Authenticated! Redirecting to login...' }])\r\n      );\r\n      dispatch(clearNotifications());\r\n      dispatch(push('/login'));\r\n      return {};\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    return axiosIns\r\n      .createInstance()\r\n      .patch(`/api/v1/users/${userInToken.id}/avatar`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Accept: 'multipart/form-data'\r\n        },\r\n        onUploadProgress(progressEvent) {\r\n          onProgress(\r\n            {\r\n              percent: Math.round(\r\n                (progressEvent.loaded / progressEvent.total) * 100\r\n              )\r\n            },\r\n            file\r\n          );\r\n        }\r\n      })\r\n      .then(response => {\r\n        onSuccess(response.data.data, file);\r\n        dispatch(stopFetch(response.data.attributes, response.data.success));\r\n      })\r\n      .catch(err => {\r\n        onError();\r\n        dispatch(fetchError(err));\r\n      });\r\n  };\r\n}\r\n","import {\r\n  START_FETCH_USER,\r\n  STOP_FETCH_USER,\r\n  FETCH_ERROR,\r\n  START_LOGIN,\r\n  END_LOGIN,\r\n  LOGIN_ERROR,\r\n  LOGOUT,\r\n  CLEAR_NOTIFICATIONS,\r\n  SAVE_USER_FROM_TOKEN\r\n} from '../actions/account';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  user: null,\r\n  success: null,\r\n  errors: null\r\n};\r\n\r\nexport default function account(state = initialState, action) {\r\n  switch (action.type) {\r\n    case START_LOGIN:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        success: null,\r\n        errors: null\r\n      };\r\n    case END_LOGIN:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        success: action.success\r\n      };\r\n    case LOGIN_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n    case LOGOUT:\r\n      return { ...state, user: null };\r\n    case START_FETCH_USER:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        success: null,\r\n        errors: null\r\n      };\r\n    case STOP_FETCH_USER:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        user: action.data,\r\n        success: action.success\r\n      };\r\n    case FETCH_ERROR:\r\n      return { ...state, isFetching: false, errors: action.errors };\r\n    case CLEAR_NOTIFICATIONS:\r\n      return { ...state, isFetching: false, errors: null, success: null };\r\n    case SAVE_USER_FROM_TOKEN:\r\n      return { ...state, isFetching: false, user: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const MARK = 'MARK';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const JUMP_TO = 'JUMP_TO';\r\n\r\nexport function mark(row, col, player) {\r\n  return { type: MARK, row, col, player };\r\n}\r\n\r\nexport function jumpTo(step) {\r\n  return { type: JUMP_TO, step };\r\n}\r\n\r\nexport function resetGame() {\r\n  return { type: RESET_GAME };\r\n}\r\n","import { RESET_GAME, MARK, JUMP_TO } from '../actions/game';\r\n\r\nconst initialState = {\r\n  xIsNext: true,\r\n  list: [\r\n    {\r\n      board: new Array(20).fill(null).map(() => new Array(20).fill(null)),\r\n      lastPosition: null\r\n    }\r\n  ],\r\n  step: 0\r\n};\r\n\r\nfunction game(state = initialState, action) {\r\n  let board = null;\r\n  switch (action.type) {\r\n    case RESET_GAME:\r\n      return initialState;\r\n    case MARK: // row, col, player\r\n      // lấy ra board hiện tại.\r\n      board = state.list[state.step].board.map(arr => [...arr]);\r\n\r\n      if (board[action.row][action.col] === null) {\r\n        board[action.row][action.col] = action.player;\r\n        return {\r\n          ...state,\r\n          list: state.list\r\n            .slice(0, state.step + 1)\r\n            .concat([\r\n              { board, lastPosition: { x: action.row, y: action.col } }\r\n            ]),\r\n          step: state.step + 1,\r\n          xIsNext: !state.xIsNext\r\n        };\r\n      }\r\n      return state;\r\n    case JUMP_TO:\r\n      return { ...state, step: action.step, xIsNext: action.step % 2 === 0 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default game;\r\n","export const SET_ISFETCHING = 'SET_ISFETCHING';\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const SET_ROOM = 'SET_ROOM';\r\nexport const CLEAR_MATCH = 'CLEAR_MATCH';\r\nexport const FETCH_GAME_DATA = 'FETCH_GAME_DATA';\r\n\r\nexport function setMessage(messageItem) {\r\n  return { type: ADD_MESSAGE, messageItem };\r\n}\r\n\r\nexport function setRoom(roomID) {\r\n  return { type: SET_ROOM, roomID };\r\n}\r\n\r\nexport function clearMatch() {\r\n  return { type: CLEAR_MATCH };\r\n}\r\n\r\nexport function fetchGameData(data) {\r\n  return { type: FETCH_GAME_DATA, data };\r\n}\r\n\r\nexport function setFetching(status) {\r\n  return { type: SET_ISFETCHING, status };\r\n}\r\n","import {\r\n  ADD_MESSAGE,\r\n  SET_ROOM,\r\n  CLEAR_MATCH,\r\n  FETCH_GAME_DATA,\r\n  SET_ISFETCHING\r\n} from '../actions/gameWithHuman';\r\nimport { size } from '../constants/constants';\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  xIsNext: true,\r\n  list: [\r\n    {\r\n      board: new Array(size).fill(null).map(() => new Array(size).fill(null)),\r\n      lastPosition: null\r\n    }\r\n  ],\r\n  messages: [],\r\n  roomID: null\r\n};\r\n\r\nexport default function gameWithHuman(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ISFETCHING:\r\n      return { ...state, isFetching: action.status };\r\n    case ADD_MESSAGE:\r\n      return { ...state, messages: [...state.messages, action.messageItem] };\r\n\r\n    case SET_ROOM:\r\n      return { ...state, roomID: action.roomID };\r\n    case CLEAR_MATCH:\r\n      return { ...initialState };\r\n    case FETCH_GAME_DATA:\r\n      return {\r\n        ...state,\r\n        messages: [...action.data.messages]\r\n      };\r\n    // case FETCH_GAME_DATA:\r\n    //   return {\r\n    //     ...state,\r\n    //     messages: [...action.data.messages],\r\n    //     xIsNext: action.data.xIsNext,\r\n    //     list: [...action.data.list]\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const numToWin = 5;\r\nexport const size = 20;\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport register from './register.reducer';\r\nimport account from './account.reducer';\r\nimport game from './withBot.reducer';\r\nimport gameWithHuman from './withHuman.reducer';\r\n\r\nexport default historyRoute =>\r\n  combineReducers({\r\n    router: connectRouter(historyRoute),\r\n    register,\r\n    account,\r\n    game,\r\n    gameWithHuman\r\n  });\r\n","import { createBrowserHistory } from 'history';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\nconst middlewares = [thunkMiddleware, routerMiddleware(history)];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducer(history), // root reducer with router state\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  return store;\n}\n","import axios from 'axios';\n\nconst host = process.env.REACT_APP_HOST_BE || '';\naxios.defaults.baseURL = host;\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Icon,\r\n  Typography,\r\n  Button,\r\n  Spin,\r\n  Alert,\r\n  Select\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst RegisterForm = ({ form, isFetching, register, success, errors }) => {\r\n  document.title = 'Register';\r\n\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = event => {\r\n    const { validateFields, getFieldValue } = form;\r\n    event.preventDefault();\r\n    validateFields(err => {\r\n      if (!err) {\r\n        // submit data\r\n        const email = getFieldValue('email');\r\n        const name = getFieldValue('name');\r\n        const password = getFieldValue('password');\r\n        const retype = getFieldValue('retype');\r\n        const sex = getFieldValue('sex');\r\n\r\n        register({ email, name, password, retype, sex });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='wrapped_form' style={{ minHeight: window.innerHeight }}>\r\n      <Row type='flex' justify='center'>\r\n        <Col xs={24} md={12} lg={6} style={{ marginTop: '50px' }}>\r\n          <Spin spinning={isFetching}>\r\n            <Card className='form_card'>\r\n              <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n                Register\r\n              </Typography.Title>\r\n\r\n              {success && (\r\n                <Alert\r\n                  className='alert_form'\r\n                  message='Success'\r\n                  description={success.message}\r\n                  type='success'\r\n                  closable\r\n                />\r\n              )}\r\n              {errors &&\r\n                errors.map(e => (\r\n                  <Alert\r\n                    className='alert_form'\r\n                    message='Error'\r\n                    description={e.message}\r\n                    type='error'\r\n                    closable\r\n                  />\r\n                ))}\r\n\r\n              <Form\r\n                className='auth_form'\r\n                layout='vertical'\r\n                onSubmit={event => handleSubmit(event)}\r\n              >\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('name', {\r\n                    rules: [\r\n                      { required: true, message: 'Please input your name!' },\r\n                      {\r\n                        min: 3,\r\n                        message: 'Name must be at least 3 characters!'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type='user'\r\n                          style={{ color: 'rgba(0,0,0,.25)' }}\r\n                        />\r\n                      }\r\n                      type='text'\r\n                      placeholder='Fullname'\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('email', {\r\n                    rules: [\r\n                      { required: true, message: 'Please input your email!' },\r\n                      {\r\n                        // eslint-disable-next-line\r\n                        pattern: /^[a-z][a-z0-9_\\.]{5,32}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$/,\r\n                        message: 'Email not valid!'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type='mail'\r\n                          style={{ color: 'rgba(0,0,0,.25)' }}\r\n                        />\r\n                      }\r\n                      type='text'\r\n                      placeholder='Email'\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('password', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your password!'\r\n                      },\r\n                      {\r\n                        min: 5,\r\n                        message: 'Password must be at least 5 characters!'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type='lock'\r\n                          style={{ color: 'rgba(0,0,0,.25)' }}\r\n                        />\r\n                      }\r\n                      type='password'\r\n                      placeholder='Password'\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('retype', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your retype password!'\r\n                      },\r\n                      {\r\n                        validator: (rule, value, callback) => {\r\n                          const { getFieldValue } = form;\r\n                          if (value && value !== getFieldValue('password')) {\r\n                            callback('Re-type password is not matched!');\r\n                          }\r\n                          callback();\r\n                        }\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type='lock'\r\n                          style={{ color: 'rgba(0,0,0,.25)' }}\r\n                        />\r\n                      }\r\n                      type='password'\r\n                      placeholder='Re-type password'\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('sex', {\r\n                    initialValue: 'true',\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please choose your sex!'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select>\r\n                      <Select.Option value='true'>Male</Select.Option>\r\n                      <Select.Option value='false'>Female</Select.Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{ marginBottom: '0px' }}>\r\n                  <Button\r\n                    block\r\n                    type='primary'\r\n                    size='large'\r\n                    htmlType='submit'\r\n                    onClick={event => handleSubmit(event)}\r\n                  >\r\n                    Sign up\r\n                  </Button>\r\n                  <div\r\n                    style={{\r\n                      marginTop: '20px',\r\n                      display: 'block',\r\n                      textAlign: 'right'\r\n                    }}\r\n                  >\r\n                    Already have account? &nbsp;\r\n                    <Link to='/login'>Sign in</Link>\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          </Spin>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedRegisterForm = Form.create({ name: 'form_register' })(\r\n  RegisterForm\r\n);\r\n\r\nexport default WrappedRegisterForm;\r\n","import { connect } from 'react-redux';\nimport WrappedRegisterForm from '../components/login_register/Register';\nimport { register } from '../actions/register';\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.register.isFetching,\n    success: state.register.success,\n    errors: state.register.errors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: user => {\n      dispatch(register(user));\n    }\n  };\n};\nconst RegisterContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedRegisterForm);\n\nexport default RegisterContainer;\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Icon,\r\n  Typography,\r\n  Button,\r\n  Spin,\r\n  Alert\r\n} from 'antd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst Login = ({\r\n  form,\r\n  isFetching,\r\n  login,\r\n  errors,\r\n  user,\r\n  loginWithGg,\r\n  loginWithFb,\r\n  saveUserFromToken\r\n}) => {\r\n  document.title = 'Login';\r\n\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = event => {\r\n    const { validateFields, getFieldValue } = form;\r\n    event.preventDefault();\r\n    validateFields(err => {\r\n      if (!err) {\r\n        // submit data\r\n        const email = getFieldValue('email');\r\n        const password = getFieldValue('password');\r\n\r\n        login({ email, password });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // token -> user\r\n    saveUserFromToken();\r\n  }, []);\r\n\r\n  if (user) {\r\n    return <Redirect to={{ pathname: '/' }} />;\r\n  }\r\n  return (\r\n    <div className='wrapped_form' style={{ minHeight: window.innerHeight }}>\r\n      <Row type='flex' justify='center'>\r\n        <Col xs={24} md={12} lg={6} style={{ marginTop: '50px' }}>\r\n          <Spin spinning={isFetching}>\r\n            <Card className='form_card'>\r\n              <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n                Login\r\n              </Typography.Title>\r\n\r\n              {errors &&\r\n                errors.map(e => (\r\n                  <Alert\r\n                    className='alert_form'\r\n                    message='Error'\r\n                    description={e.message}\r\n                    type='error'\r\n                    closable\r\n                  />\r\n                ))}\r\n\r\n              <Form\r\n                className='auth_form'\r\n                layout='vertical'\r\n                onSubmit={event => handleSubmit(event)}\r\n              >\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('email', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your email!'\r\n                      },\r\n                      {\r\n                        // eslint-disable-next-line\r\n                        pattern: /^[a-z][a-z0-9_\\.]{5,32}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$/,\r\n                        message: 'Email not valid!'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type='mail'\r\n                          style={{ color: 'rgba(0,0,0,.25)' }}\r\n                        />\r\n                      }\r\n                      type='text'\r\n                      placeholder='Email'\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item required hasFeedback>\r\n                  {getFieldDecorator('password', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: 'Please input your password!'\r\n                      },\r\n                      {\r\n                        min: 6,\r\n                        message: 'Password must be at least 6 characters!'\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type='lock'\r\n                          style={{ color: 'rgba(0,0,0,.25)' }}\r\n                        />\r\n                      }\r\n                      type='password'\r\n                      placeholder='Password'\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item style={{ marginBottom: '0px' }}>\r\n                  <Button\r\n                    block\r\n                    type='primary'\r\n                    size='large'\r\n                    htmlType='submit'\r\n                    onClick={event => handleSubmit(event)}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                  <div\r\n                    style={{\r\n                      marginTop: '20px',\r\n                      display: 'block'\r\n                    }}\r\n                  >\r\n                    Or login with\r\n                    <Row gutter={10}>\r\n                      <Col span={12}>\r\n                        <Button\r\n                          style={{ marginTop: '10px' }}\r\n                          block\r\n                          type='primary'\r\n                          size='large'\r\n                          onClick={loginWithFb}\r\n                        >\r\n                          Login with <Icon type='facebook' theme='filled' />\r\n                        </Button>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Button\r\n                          style={{ marginTop: '10px' }}\r\n                          block\r\n                          type='danger'\r\n                          size='large'\r\n                          onClick={loginWithGg}\r\n                        >\r\n                          Login with{' '}\r\n                          <Icon type='google-circle' theme='filled' />\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      marginTop: '20px',\r\n                      display: 'block',\r\n                      textAlign: 'right'\r\n                    }}\r\n                  >\r\n                    New with our? &nbsp;\r\n                    <Link to='/register'>Sign up now</Link>\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          </Spin>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedLogin = Form.create({ name: 'form_login' })(Login);\r\n\r\nexport default WrappedLogin;\r\n","import { connect } from 'react-redux';\r\nimport WrappedLogin from '../components/login_register/Login';\r\nimport {\r\n  saveUserFromToken,\r\n  login,\r\n  clearNotifications\r\n} from '../actions/account';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isFetching: state.account.isFetching,\r\n    success: state.account.success,\r\n    errors: state.account.errors,\r\n    user: state.account.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: user => {\r\n      dispatch(login(user));\r\n    },\r\n    saveUserFromToken: () => {\r\n      dispatch(saveUserFromToken());\r\n    },\r\n    clearMessage: () => {\r\n      dispatch(clearNotifications());\r\n    }\r\n  };\r\n};\r\n\r\nconst LoginContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedLogin);\r\n\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Spin, Icon } from 'antd';\r\nimport LocalStorage from '../utils/LocalStorage';\r\n\r\nconst PrivateRoute = ({ user, saveUserFromToken, children, ...rest }) => {\r\n  // kiem tra token va user co hop le hay khong\r\n  const storeUser = LocalStorage.getUser();\r\n\r\n  if (!storeUser) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/login'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  if (!user) {\r\n    saveUserFromToken();\r\n    const antIcon = <Icon type='loading' style={{ fontSize: 24 }} spin />;\r\n\r\n    // lay du lieu user trong localstorage -> luu vao user\r\n\r\n    return (\r\n      <Spin\r\n        size='large'\r\n        tip='Loading...'\r\n        className='loading-icon'\r\n        indicator={antIcon}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <Route {...rest} render={() => children} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { connect } from 'react-redux';\r\nimport { saveUserFromToken } from '../actions/account';\r\nimport PrivateRoute from '../layout/PrivateRoute';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.account.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    saveUserFromToken: () => {\r\n      dispatch(saveUserFromToken());\r\n    }\r\n  };\r\n};\r\n\r\nconst PrivateRouteContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PrivateRoute);\r\n\r\nexport default PrivateRouteContainer;\r\n","import React from 'react';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\nconst AccountLayout = ({ children }) => {\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        style={{\r\n          overflow: 'auto',\r\n          height: 'calc(100vh - 64px)',\r\n          position: 'fixed',\r\n          left: 0\r\n        }}\r\n      >\r\n        <Menu\r\n          mode='inline'\r\n          defaultSelectedKeys={url}\r\n          selectedKeys={[location.pathname]}\r\n          style={{ height: '100%', borderRight: 0 }}\r\n        >\r\n          <Menu.Item key={url}>\r\n            <Link\r\n              to={{ pathname: `${url}`, state: { from: location.pathname } }}\r\n            >\r\n              <Icon type='profile' /> View profiles\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={`${url}/edit/profiles`}>\r\n            {/* <Link to='/account/edit/profiles'> */}\r\n            <Link\r\n              to={{\r\n                pathname: `${url}/edit/profiles`,\r\n                state: { from: location.pathname }\r\n              }}\r\n            >\r\n              <Icon type='profile' /> Update profiles\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={`${url}/edit/password`}>\r\n            {/* <Link to='/account/edit/password'> */}\r\n            <Link\r\n              to={{\r\n                pathname: `${url}/edit/password`,\r\n                state: { from: location.pathname }\r\n              }}\r\n            >\r\n              <Icon type='key' /> Change password\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={`${url}/edit/avatar`}>\r\n            <Link\r\n              to={{\r\n                pathname: `${url}/edit/avatar`,\r\n                state: { from: location.pathname }\r\n              }}\r\n            >\r\n              <Icon type='picture' /> Upload avatar\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n\r\n      <Layout style={{ marginLeft: 200 }}>\r\n        <Content style={{ margin: '24px 16px 0' }}>{children}</Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AccountLayout;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Form, Input, Button, Select, Alert } from 'antd';\r\nimport shortId from 'shortid';\r\nimport './index.scss';\r\n\r\nconst UpdateInfo = ({ form, user, update, success, errors, clearMessage }) => {\r\n  document.title = 'Update profiles';\r\n\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = event => {\r\n    const { validateFields, getFieldValue } = form;\r\n    event.preventDefault();\r\n    validateFields(err => {\r\n      if (!err) {\r\n        // submit data\r\n        const name = getFieldValue('name');\r\n        const sex = getFieldValue('sex');\r\n        const address = getFieldValue('address');\r\n\r\n        update({ id: user.id, name, sex, address });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      clearMessage();\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      loading={!user}\r\n      title='Update account info'\r\n      style={{\r\n        maxWidth: 450,\r\n        margin: '0 auto',\r\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.09)'\r\n      }}\r\n    >\r\n      {errors &&\r\n        errors.map(err => (\r\n          <Alert\r\n            key={shortId.generate()}\r\n            className='alert'\r\n            type='error'\r\n            message={err.code}\r\n            description={err.message}\r\n            showIcon\r\n            closable\r\n          />\r\n        ))}\r\n      {success && (\r\n        <Alert\r\n          className='alert'\r\n          type='success'\r\n          message='Success'\r\n          description={success.message}\r\n          showIcon\r\n          closable\r\n        />\r\n      )}\r\n      <Form\r\n        className='form-account'\r\n        layout='horizontal'\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 18 }}\r\n        onSubmit={event => handleSubmit(event)}\r\n      >\r\n        <Form.Item label='Email'>\r\n          {getFieldDecorator('email', {\r\n            initialValue: user ? user.email : null\r\n          })(<Input disabled />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label='Name' required hasFeedback>\r\n          {getFieldDecorator('name', {\r\n            rules: [\r\n              { required: true, message: 'Please input your name!' },\r\n              {\r\n                min: 3,\r\n                message: 'Name must be at least 3 characters!'\r\n              }\r\n            ],\r\n            initialValue: user ? user.name : null\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label='Sex' required hasFeedback>\r\n          {getFieldDecorator('sex', {\r\n            initialValue: user ? user.sex.toString() : null\r\n          })(\r\n            <Select>\r\n              <Select.Option key='true'>Male</Select.Option>\r\n              <Select.Option key='false'>Female</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item label='Address' required hasFeedback>\r\n          {getFieldDecorator('address', {\r\n            rules: [{ required: true, message: 'Please enter your address!' }],\r\n            initialValue: user ? user.address : null\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{ sm: { span: 12, offset: 6 } }}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Button\r\n            htmlType='submit'\r\n            block\r\n            type='primary'\r\n            onClick={event => handleSubmit(event)}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst WrappedUpdateInfo = Form.create({ name: 'form_update' })(UpdateInfo);\r\n\r\nexport default WrappedUpdateInfo;\r\n","import { connect } from 'react-redux';\r\nimport UpdateInfo from '../components/account/UpdateInfo';\r\nimport { updateUserInfo, clearNotifications } from '../actions/account';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.account.user,\r\n    errors: state.account.errors,\r\n    success: state.account.success\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    update: user => {\r\n      dispatch(updateUserInfo(user));\r\n    },\r\n    clearMessage: () => {\r\n      dispatch(clearNotifications());\r\n    }\r\n  };\r\n};\r\n\r\nconst UpdateInfoContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UpdateInfo);\r\nexport default UpdateInfoContainer;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Form, Input, Button, Alert } from 'antd';\r\nimport './index.scss';\r\n\r\nconst ChangePassword = ({\r\n  form,\r\n  isFetching,\r\n  changePassword,\r\n  success,\r\n  errors,\r\n  clearMessage\r\n}) => {\r\n  document.title = 'Change password';\r\n\r\n  const { getFieldDecorator } = form;\r\n\r\n  const handleSubmit = event => {\r\n    const { validateFields, getFieldValue } = form;\r\n    event.preventDefault();\r\n    validateFields(err => {\r\n      if (!err) {\r\n        // submit data\r\n        const currentPw = getFieldValue('currentPw');\r\n        const newPassword = getFieldValue('newPassword');\r\n        const retype = getFieldValue('retype');\r\n\r\n        changePassword({ currentPw, newPassword, retype });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      clearMessage();\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      title='Change password'\r\n      style={{\r\n        maxWidth: 450,\r\n        margin: '0 auto',\r\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.09)'\r\n      }}\r\n    >\r\n      {errors &&\r\n        errors.map(err => (\r\n          <Alert\r\n            className='alert'\r\n            type='error'\r\n            message={err.code}\r\n            description={err.message}\r\n            showIcon\r\n            closable\r\n          />\r\n        ))}\r\n      {success && (\r\n        <Alert\r\n          className='alert'\r\n          type='success'\r\n          message='Success'\r\n          description={success.message}\r\n          showIcon\r\n          closable\r\n        />\r\n      )}\r\n      <Form\r\n        className='form-account'\r\n        layout='horizontal'\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        onSubmit={event => handleSubmit(event)}\r\n      >\r\n        <Form.Item label='Current Password'>\r\n          {getFieldDecorator('currentPw', {\r\n            rules: [\r\n              { required: true, message: 'Field is required!' },\r\n              { min: 5, message: 'Password is at least 5 characters!' }\r\n            ]\r\n          })(<Input type='password' />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label='New Password'>\r\n          {getFieldDecorator('newPassword', {\r\n            rules: [\r\n              { required: true, message: 'Field is required!' },\r\n              { min: 5, message: 'Password is at least 5 characters!' }\r\n            ]\r\n          })(<Input type='password' />)}\r\n        </Form.Item>\r\n        <Form.Item label='Re-type'>\r\n          {getFieldDecorator('retype', {\r\n            rules: [\r\n              { required: true, message: 'Field is required!' },\r\n              {\r\n                validator(rules, value, cb) {\r\n                  const { getFieldValue } = form;\r\n                  if (value && value !== getFieldValue('newPassword')) {\r\n                    cb('Password is not match!');\r\n                  }\r\n                  cb();\r\n                }\r\n              }\r\n            ]\r\n          })(<Input type='password' />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{ sm: { span: 12, offset: 6 } }}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          <Button\r\n            loading={isFetching}\r\n            htmlType='submit'\r\n            block\r\n            type='primary'\r\n            onClick={event => handleSubmit(event)}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst WrappedChangePassword = Form.create({ name: 'form_changePassword' })(\r\n  ChangePassword\r\n);\r\n\r\nexport default WrappedChangePassword;\r\n","import { connect } from 'react-redux';\r\nimport ChangePassword from '../components/account/ChangePassword';\r\nimport { changePassword, clearNotifications } from '../actions/account';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isFetching: state.account.isFetching,\r\n    errors: state.account.errors,\r\n    success: state.account.success\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changePassword: user => {\r\n      dispatch(changePassword(user));\r\n    },\r\n    clearMessage: () => {\r\n      dispatch(clearNotifications());\r\n    }\r\n  };\r\n};\r\n\r\nconst ChangePasswordContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ChangePassword);\r\n\r\nexport default ChangePasswordContainer;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, message, Upload, Icon, Avatar } from 'antd';\r\n\r\nconst UploadAvatar = ({\r\n  user,\r\n  uploadAvatar,\r\n  success,\r\n  errors,\r\n  clearMessage\r\n}) => {\r\n  document.title = 'Upload avatar';\r\n\r\n  const props = {\r\n    customRequest({ file, onError, onProgress, onSuccess }) {\r\n      uploadAvatar(file, onProgress, onSuccess, onError);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      clearMessage();\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      // loading={!user}\r\n      title='Upload avatar'\r\n      style={{\r\n        maxWidth: 450,\r\n        margin: '0 auto',\r\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.09)'\r\n      }}\r\n    >\r\n      {errors && errors.map(e => message.error(e.message))}\r\n      {success && message.success(success.message)}\r\n\r\n      <Avatar\r\n        size={200}\r\n        style={{\r\n          maxWidth: '100%',\r\n          margin: '0 auto',\r\n          marginBottom: 20,\r\n          display: 'block'\r\n        }}\r\n        shape='square'\r\n        src={user.avatar}\r\n      />\r\n\r\n      <Upload.Dragger {...props} accept='.jpg,.jpeg,.png'>\r\n        <p className='ant-upload-drag-icon'>\r\n          <Icon type='inbox' />\r\n        </p>\r\n        <p className='ant-upload-text'>\r\n          Click or drag file to this area to upload\r\n        </p>\r\n      </Upload.Dragger>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UploadAvatar;\r\n","import { connect } from 'react-redux';\r\nimport UploadAvatar from '../components/account/UploadAvatar';\r\nimport { uploadAvatar, clearNotifications } from '../actions/account';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.account.user,\r\n    success: state.account.success,\r\n    errors: state.account.errors\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    uploadAvatar: (file, onProgress, onSuccess, onError) => {\r\n      dispatch(uploadAvatar(file, onProgress, onSuccess, onError));\r\n    },\r\n    clearMessage: () => {\r\n      dispatch(clearNotifications());\r\n    }\r\n  };\r\n};\r\n\r\nconst UploadAvatarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UploadAvatar);\r\nexport default UploadAvatarContainer;\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link, Redirect } from 'react-router-dom';\r\nimport { Result } from 'antd';\r\n// import AccountView from '../components/account/AccountView';\r\nimport AccountLayout from '../layout/AccountLayout';\r\nimport UpdateInfoContainer from '../containers/UpdateInfoContainer';\r\nimport ChangePasswordContainer from '../containers/ChangePasswordContainer';\r\nimport UploadAvatarContainer from '../containers/UploadAvatarContainer';\r\n\r\nconst AccountScene = () => {\r\n  const { path } = useRouteMatch();\r\n  /* hiển thị biểu đổ số trận thắng thua khi đánh với người,\r\n   với máy, thông tin về số trận đã đấu, tổng số giờ chơi */\r\n\r\n  return (\r\n    <AccountLayout>\r\n      <div style={{ padding: 24, overflow: 'initial' }}>\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            {/* <AccountView /> */}\r\n            <Redirect to={`${path}/edit/profiles`} />\r\n          </Route>\r\n          <Route exact path={`${path}/edit/profiles`}>\r\n            <UpdateInfoContainer />\r\n          </Route>\r\n          <Route exact path={`${path}/edit/password`}>\r\n            <ChangePasswordContainer />\r\n          </Route>\r\n          <Route exact path={`${path}/edit/avatar`}>\r\n            <UploadAvatarContainer />\r\n          </Route>\r\n\r\n          <Route path='*'>\r\n            <Result\r\n              status='404'\r\n              title='404'\r\n              subTitle='Sorry, the page you visited does not exist.'\r\n              extra={<Link to='/'>Back Home</Link>}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </AccountLayout>\r\n  );\r\n};\r\n\r\nexport default AccountScene;\r\n","import React from 'react';\r\nimport { Menu, Icon, Button } from 'antd';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport LocalStorage from '../../utils/LocalStorage';\r\nimport './index.scss';\r\n\r\nconst NavBar = ({ user, logOut }) => {\r\n  const handleLogout = event => {\r\n    event.preventDefault();\r\n    LocalStorage.removeToken();\r\n    logOut();\r\n  };\r\n\r\n  const location = useLocation();\r\n  const { url } = useRouteMatch();\r\n\r\n  return (\r\n    <Menu\r\n      theme='dark'\r\n      mode='horizontal'\r\n      defaultSelectedKeys={['/']}\r\n      selectedKeys={[url]}\r\n      style={{ lineHeight: '40px' }}\r\n    >\r\n      <Menu.Item key='/account'>\r\n        <Link to={{ pathname: '/account', state: { from: location.pathname } }}>\r\n          <Icon type='user' />\r\n          Account\r\n        </Link>\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key='/game'>\r\n        <Link to={{ pathname: '/game', state: { from: location.pathname } }}>\r\n          <Icon type='coffee' />\r\n          Game\r\n        </Link>\r\n      </Menu.Item>\r\n\r\n      {!user && (\r\n        <Menu.Item className='float-right'>\r\n          <Link to='/register'>\r\n            <Icon type='user-add' />\r\n            Register\r\n          </Link>\r\n        </Menu.Item>\r\n      )}\r\n\r\n      {!user && (\r\n        <Menu.Item className='float-right'>\r\n          <Link to='/login'>\r\n            <Icon type='login' />\r\n            Login\r\n          </Link>\r\n        </Menu.Item>\r\n      )}\r\n\r\n      {user && (\r\n        <Menu.Item className='float-right'>\r\n          <Button type='link' onClick={event => handleLogout(event)}>\r\n            <Icon type='logout' />\r\n            Logout\r\n          </Button>\r\n        </Menu.Item>\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { connect } from 'react-redux';\r\nimport { logOut } from '../actions/account';\r\nimport NavBar from '../components/nav/NavBar';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.account.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => {\r\n      dispatch(logOut());\r\n    }\r\n  };\r\n};\r\n\r\nconst NavBarContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavBar);\r\n\r\nexport default NavBarContainer;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport NavBarContainer from '../containers/NavBarContainer';\r\n\r\nconst { Header } = Layout;\r\n\r\nconst LayoutPage = ({ children }) => {\r\n  return (\r\n    <Layout\r\n      style={{\r\n        minHeight: '100vh'\r\n      }}\r\n    >\r\n      <Header\r\n        style={{ position: 'fixed', zIndex: 1, width: '100%', height: '40px' }}\r\n      >\r\n        <div className='logo' />\r\n        <NavBarContainer />\r\n      </Header>\r\n      <Layout style={{ position: 'relative', marginTop: 40 }}>\r\n        {children}\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutPage;\r\n","import { numToWin, size } from '../constants/constants';\r\n\r\nconst checkingHorizontal = (board, row, col) => {\r\n  let points = [];\r\n\r\n  let isBlockOutAbove = false;\r\n  let isBlockOutBelow = false;\r\n\r\n  const curPlayer = board[row][col];\r\n\r\n  // count = 1 la vi tri hien tai.\r\n  let count = 1;\r\n  points.push({ row, col });\r\n\r\n  // dem ve 2 ben\r\n  for (let i = col - 1; i >= 0; i -= 1) {\r\n    if (board[row][i] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row, col: i });\r\n    } else {\r\n      if (board[row][i] !== null) {\r\n        isBlockOutAbove = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  for (let i = col + 1; i < size; i += 1) {\r\n    if (board[row][i] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row, col: i });\r\n    } else {\r\n      if (board[row][i] !== null) {\r\n        isBlockOutBelow = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (count >= numToWin) {\r\n    // sort\r\n    points = points.sort((p1, p2) => {\r\n      return (p1.row + 1) * size + p1.col <= (p2.row + 1) * size + p2.col\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n    points.splice(1, points.length - 2);\r\n\r\n    if (count > numToWin) {\r\n      return {\r\n        hasWinner: true,\r\n        points\r\n      };\r\n    }\r\n    return {\r\n      hasWinner: !(isBlockOutAbove && isBlockOutBelow),\r\n      points: !(isBlockOutAbove && isBlockOutBelow) ? points : []\r\n    };\r\n  }\r\n  return {\r\n    hasWinner: false,\r\n    points: []\r\n  };\r\n};\r\n\r\nconst checkingVertical = (board, row, col) => {\r\n  let points = [];\r\n  let isBlockOutAbove = false;\r\n  let isBlockOutBelow = false;\r\n\r\n  const curPlayer = board[row][col];\r\n\r\n  // count = 1 la vi tri hien tai.\r\n  let count = 1;\r\n  points.push({ row, col });\r\n\r\n  // dem ve 2 ben\r\n  for (let i = row - 1; i >= 0; i -= 1) {\r\n    if (board[i][col] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row: i, col });\r\n    } else {\r\n      if (board[i][col] !== null) {\r\n        isBlockOutAbove = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  for (let i = row + 1; i < size; i += 1) {\r\n    if (board[i][col] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row: i, col });\r\n    } else {\r\n      if (board[i][col] !== null) {\r\n        isBlockOutBelow = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (count >= numToWin) {\r\n    // sort\r\n    points = points.sort((p1, p2) => {\r\n      return (p1.row + 1) * size + p1.col <= (p2.row + 1) * size + p2.col\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n    points.splice(1, points.length - 2);\r\n\r\n    if (count > numToWin) {\r\n      return {\r\n        hasWinner: true,\r\n        points\r\n      };\r\n    }\r\n    return {\r\n      hasWinner: !(isBlockOutAbove && isBlockOutBelow),\r\n      points: !(isBlockOutAbove && isBlockOutBelow) ? points : []\r\n    };\r\n  }\r\n  return {\r\n    hasWinner: false,\r\n    points: []\r\n  };\r\n};\r\n\r\nconst checkingMainDiagonal = (board, row, col) => {\r\n  let points = [];\r\n\r\n  let isBlockOutAbove = false;\r\n  let isBlockOutBelow = false;\r\n\r\n  const curPlayer = board[row][col];\r\n  // count = 1 la vi tri hien tai.\r\n  let count = 1;\r\n  points.push({ row, col });\r\n\r\n  // dem ve 2 ben\r\n  for (let i = row - 1, j = col - 1; i >= 0 && j >= 0; i -= 1, j -= 1) {\r\n    if (board[i][j] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row: i, col: j });\r\n    } else {\r\n      if (board[i][j] !== null) {\r\n        isBlockOutAbove = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  for (let i = row + 1, j = col + 1; i < size && j < size; i += 1, j += 1) {\r\n    if (board[i][j] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row: i, col: j });\r\n    } else {\r\n      if (board[i][j] !== null) {\r\n        isBlockOutBelow = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (count >= numToWin) {\r\n    // sort\r\n    points = points.sort((p1, p2) => {\r\n      return (p1.row + 1) * size + p1.col <= (p2.row + 1) * size + p2.col\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n    points.splice(1, points.length - 2);\r\n\r\n    if (count > numToWin) {\r\n      return {\r\n        hasWinner: true,\r\n        points\r\n      };\r\n    }\r\n    return {\r\n      hasWinner: !(isBlockOutAbove && isBlockOutBelow),\r\n      points: !(isBlockOutAbove && isBlockOutBelow) ? points : []\r\n    };\r\n  }\r\n  return {\r\n    hasWinner: false,\r\n    points: []\r\n  };\r\n};\r\n\r\nconst checkingSubDiagonal = (board, row, col) => {\r\n  let points = [];\r\n\r\n  let isBlockOutAbove = false;\r\n  let isBlockOutBelow = false;\r\n\r\n  const curPlayer = board[row][col];\r\n  // count = 1 la vi tri hien tai.\r\n  let count = 1;\r\n  points.push({ row, col });\r\n\r\n  // dem ve 2 ben\r\n  for (let i = row - 1, j = col + 1; i >= 0 && j < size; i -= 1, j += 1) {\r\n    if (board[i][j] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row: i, col: j });\r\n    } else {\r\n      if (board[i][j] !== null) {\r\n        isBlockOutAbove = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  for (let i = row + 1, j = col - 1; i < size && j >= 0; i += 1, j -= 1) {\r\n    if (board[i][j] === curPlayer) {\r\n      count += 1;\r\n      points.push({ row: i, col: j });\r\n    } else {\r\n      if (board[i][j] !== null) {\r\n        isBlockOutBelow = true;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (count >= numToWin) {\r\n    // sort\r\n    points = points.sort((p1, p2) => {\r\n      return (p1.row + 1) * size + p1.col <= (p2.row + 1) * size + p2.col\r\n        ? -1\r\n        : 1;\r\n    });\r\n\r\n    points.splice(1, points.length - 2);\r\n\r\n    if (count > numToWin) {\r\n      return {\r\n        hasWinner: true,\r\n        points\r\n      };\r\n    }\r\n    return {\r\n      hasWinner: !(isBlockOutAbove && isBlockOutBelow),\r\n      points: !(isBlockOutAbove && isBlockOutBelow) ? points : []\r\n    };\r\n  }\r\n  return {\r\n    hasWinner: false,\r\n    points: []\r\n  };\r\n};\r\n\r\nexport const isTerminated = (board, row, col) => {\r\n  const retH = checkingHorizontal(board, row, col);\r\n  const retV = checkingVertical(board, row, col);\r\n  const retM = checkingMainDiagonal(board, row, col);\r\n  const retS = checkingSubDiagonal(board, row, col);\r\n\r\n  const listPoints = [];\r\n  if (retH.points.length === 2) listPoints.push(retH.points);\r\n  if (retV.points.length === 2) listPoints.push(retV.points);\r\n  if (retM.points.length === 2) listPoints.push(retM.points);\r\n  if (retS.points.length === 2) listPoints.push(retS.points);\r\n\r\n  const ret = {\r\n    hasWinner:\r\n      retH.hasWinner || retV.hasWinner || retM.hasWinner || retS.hasWinner,\r\n    listPoints\r\n  };\r\n  return ret;\r\n};\r\n\r\nexport const isFull = board => {\r\n  return board.every(row => {\r\n    return row.every(cell => cell);\r\n  });\r\n};\r\n","import React from 'react';\n\nconst Line = ({ pointStart, pointEnd, cellWidth, player }) => {\n  const playerDisplay = player === 1 ? 'X' : 'O';\n\n  let pStart = {};\n  const pEnd = {};\n\n  if (!pStart.x && pointStart.y === pointEnd.y) {\n    pStart.x = pointStart.x;\n    pEnd.x = pointEnd.x + cellWidth;\n\n    pStart.y = pointStart.y + cellWidth / 2;\n    pEnd.y = pointEnd.y + cellWidth / 2;\n  }\n\n  if (!pStart.x && pointStart.x === pointEnd.x) {\n    pStart.y = pointStart.y;\n    pEnd.y = pointEnd.y + cellWidth;\n\n    pStart.x = pointStart.x + cellWidth / 2;\n    pEnd.x = pointEnd.x + cellWidth / 2;\n  }\n\n  if (!pStart.x && pointEnd.x - pointStart.x === pointEnd.y - pointStart.y) {\n    pStart = pointStart;\n\n    pEnd.x = pointEnd.x + cellWidth;\n    pEnd.y = pointEnd.y + cellWidth;\n  }\n\n  if (!pStart.x && pointEnd.x - pointStart.x === -(pointEnd.y - pointStart.y)) {\n    pStart.x = pointStart.x + cellWidth;\n    pStart.y = pointStart.y;\n\n    pEnd.x = pointEnd.x;\n    pEnd.y = pointEnd.y + cellWidth;\n  }\n\n  return (\n    <path\n      className={`line ${playerDisplay}`}\n      d={`M${pStart.x} ${pStart.y} L${pEnd.x} ${pEnd.y}`}\n    />\n  );\n};\n\nexport default Line;\n","import React from 'react';\n\nconst Cell = ({ row, col, val, mark, xIsNext, stop }) => {\n  let player = '';\n  if (val !== null) {\n    player = val === 1 ? ' X' : ' O';\n  }\n\n  const handleClick = () => {\n    // if (!stop) {\n    //   mark(row, col, xIsNext ? 1 : 0);\n    // }\n\n    if (!stop && xIsNext) {\n      mark(row, col, 1);\n    }\n  };\n\n  return (\n    <button\n      id={`cell-${row}-${col}`}\n      type='button'\n      className={`board-cell player${player}`}\n      onClick={handleClick}\n    >\n      {player}\n    </button>\n  );\n};\n\nCell.defaultProps = {\n  val: null\n};\n\nexport default Cell;\n","import { connect } from 'react-redux';\r\nimport Cell from '../components/game/Cell';\r\nimport { mark } from '../actions/game';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    xIsNext: state.game.xIsNext\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    mark: (row, col, player) => {\r\n      dispatch(mark(row, col, player));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Cell);\r\n","import React from 'react';\nimport uuidv1 from 'uuid/v1';\nimport Line from './Line';\nimport CellContainer from '../../containers/CellContainer';\n\nconst Board = ({ board, winner, listPoints }) => {\n  const renderBoard = () => {\n    return board.map((row, iRow) => {\n      return (\n        <div key={uuidv1()} className='board-row'>\n          {row.map((cell, iCol) => {\n            return (\n              <CellContainer\n                key={uuidv1()}\n                row={iRow}\n                col={iCol}\n                val={cell}\n                stop={winner !== null}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  };\n\n  const renderLines = () =>\n    listPoints.map(el => {\n      const pStart = el[0];\n      const pEnd = el[1];\n\n      const cellStart = document.querySelector(\n        `#cell-${pStart.row}-${pStart.col}`\n      );\n\n      const cellEnd = document.querySelector(`#cell-${pEnd.row}-${pEnd.col}`);\n      return (\n        <Line\n          key={uuidv1()}\n          pointStart={{ x: cellStart.offsetLeft, y: cellStart.offsetTop }}\n          pointEnd={{ x: cellEnd.offsetLeft, y: cellEnd.offsetTop }}\n          cellWidth={cellEnd.offsetWidth}\n          player={board[pStart.row][pStart.col]}\n        />\n      );\n    });\n\n  return (\n    <div id='board'>\n      {renderBoard()}\n      <svg className='draw-lines'>{winner !== null && renderLines()}</svg>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { List, Button, Card } from 'antd';\nimport uuidv1 from 'uuid/v1';\n\nconst History = ({ history, jumpTo, toggleSort, selected, sort }) => {\n  if (!history) return <></>;\n\n  // clone to new history\n  const his = [...history];\n\n  const moves = his.map((step, idx) => {\n    const { lastPosition } = step;\n    const desc = idx\n      ? `Move to #${idx}. Position [${lastPosition.x},${lastPosition.y}]`\n      : 'Go to game start';\n\n    const isSelect = idx === selected;\n    return (\n      <List.Item key={uuidv1()}>\n        <Button\n          type={isSelect ? 'primary' : 'default'}\n          block\n          onClick={() => jumpTo(idx)}\n        >\n          {desc}\n        </Button>\n      </List.Item>\n    );\n  });\n\n  if (!sort) {\n    moves.reverse();\n  }\n\n  const sortIcon = sort ? 'down' : 'up';\n\n  return (\n    <Card\n      size='small'\n      title='History'\n      className='game-card history-block'\n      extra={\n        <Button\n          size='small'\n          type='primary'\n          shape='circle'\n          icon={sortIcon}\n          onClick={toggleSort}\n        />\n      }\n    >\n      <List\n        style={{ maxHeight: '300px', overflowX: 'auto' }}\n        size='small'\n        split={false}\n      >\n        {moves}\n      </List>\n    </Card>\n  );\n};\n\nexport default History;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Button, Modal } from 'antd';\nimport { Prompt } from 'react-router-dom';\nimport { isFull, isTerminated } from '../../algorithms/boardChecking';\nimport Board from './Board';\nimport History from './History';\nimport { generatePosition } from '../../algorithms/AI';\n\nconst Game = ({ xIsNext, list, step, jumpTo, resetGame, mark }) => {\n  document.title = 'Play with bot';\n\n  const [open, setOpen] = useState(false);\n  const [sortASC, setSort] = useState(true);\n\n  const { board } = list[step];\n  const { lastPosition } = list[step];\n\n  //  check xem game win hay chua\n  let points = [];\n  let hasWinner;\n  let winner = null;\n  if (lastPosition) {\n    const checkingResult = isTerminated(board, lastPosition.x, lastPosition.y);\n    points = checkingResult.listPoints;\n    hasWinner = checkingResult.hasWinner;\n\n    if (hasWinner) {\n      winner = board[lastPosition.x][lastPosition.y];\n    } else if (isFull(board)) {\n      winner = '-1';\n    }\n  }\n\n  const showPlayer = () => {\n    let strPlayer = '';\n    let status = '';\n    if (winner !== null) {\n      strPlayer = winner === 1 ? 'X' : 'O';\n      status = 'Winner';\n    } else {\n      status = 'Player';\n      if (isFull(board)) {\n        strPlayer = 'DRAW';\n      } else {\n        strPlayer = xIsNext ? 'X' : 'O';\n      }\n    }\n\n    return (\n      <>\n        {status}: &nbsp;\n        <span className={`player${` ${strPlayer}`}`}>{strPlayer}</span>\n      </>\n    );\n  };\n\n  const showConfirm = () => {\n    Modal.confirm({\n      title: 'Reset game',\n      content: 'Do you want to reset this game?',\n      okText: 'Yes',\n      cancelTextokText: 'No',\n      onOk() {\n        resetGame();\n        setOpen(false);\n      },\n      onCancel() {\n        setOpen(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    resetGame();\n  }, []);\n\n  useEffect(() => {\n    if (!xIsNext && !hasWinner) {\n      const pos = generatePosition(board);\n      mark(pos.row, pos.col, 0);\n    }\n  });\n\n  const showResult = () => {\n    let text = null;\n    switch (winner) {\n      case -1:\n        text = 'XO';\n        break;\n      case 0:\n        text = 'O';\n        break;\n      case 1:\n        text = 'X';\n        break;\n      default:\n        break;\n    }\n    return (\n      <Modal\n        title='Result'\n        visible={winner !== null}\n        onOk={resetGame}\n        cancelButtonProps={{ disabled: true }}\n      >\n        <div style={{ textAlign: 'center' }}>\n          <p style={{ marginBottom: 20 }}>Winner</p>\n          <p\n            style={{ fontSize: 100, marginBottom: 0, lineHeight: 1 }}\n            className={`player ${text}`}\n          >\n            {text}\n          </p>\n        </div>\n      </Modal>\n    );\n  };\n\n  return (\n    <div className='game-wrapper' style={{ flexGrow: 1 }}>\n      <Prompt message='Are you sure you want to leave?' />\n      <Row type='flex' justify='space-between'>\n        <Col xs={24} md={16}>\n          <Row type='flex' justify='center' align='top'>\n            <Col>\n              <Board listPoints={points} board={board} winner={winner} />\n            </Col>\n          </Row>\n        </Col>\n\n        <Col xs={24} md={8}>\n          <Card\n            title='Game infomation'\n            className='game-card game-info'\n            size='small'\n          >\n            <p>{showPlayer()}</p>\n\n            <Button type='primary' onClick={() => setOpen(true)}>\n              Reset game\n            </Button>\n          </Card>\n          <History\n            history={list}\n            sort={sortASC}\n            toggleSort={() => setSort(!sortASC)}\n            jumpTo={jumpTo}\n            selected={step}\n          />\n        </Col>\n      </Row>\n\n      {open && showConfirm()}\n      {winner !== null && showResult()}\n    </div>\n  );\n};\n\nexport default Game;\n","import { size } from '../constants/constants';\r\n// import boardChecking from './boardChecking';\r\n\r\nexport const generatePosition = board => {\r\n  let row = null;\r\n  let col = null;\r\n  do {\r\n    row = Math.floor(Math.random() * size);\r\n    col = Math.floor(Math.random() * size);\r\n  } while (!(row < size && col < size && board[row][col] === null));\r\n\r\n  return { row, col };\r\n};\r\n\r\nexport const test = () => {};\r\n","import { connect } from 'react-redux';\nimport Game from '../components/game/Game';\nimport { resetGame, jumpTo, mark } from '../actions/game';\n\nconst mapStateToProps = state => ({\n  xIsNext: state.game.xIsNext,\n  list: state.game.list,\n  step: state.game.step\n});\n\nconst mapDispatchToProps = dispatch => ({\n  resetGame: () => dispatch(resetGame()),\n  jumpTo: step => {\n    dispatch(jumpTo(step));\n  },\n  mark: (row, col, player) => {\n    dispatch(mark(row, col, player));\n  }\n});\n\nconst GameContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game);\n\nexport default GameContainer;\n","import io from 'socket.io-client';\r\n\r\nconst socket = io(process.env.REACT_APP_HOST_BE);\r\n\r\nexport default socket;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Spin } from 'antd';\r\nimport { Link, useRouteMatch, Redirect } from 'react-router-dom';\r\nimport socketio from '../../socketio';\r\nimport LocalStorage from '../../utils/LocalStorage';\r\n\r\nconst IndexPage = ({ setRoom, push }) => {\r\n  const s = socketio.open();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      s.emit('cancle_lobby');\r\n      s.off('created_room');\r\n    };\r\n  }, []);\r\n  document.title = 'Game Lobby';\r\n\r\n  const { url } = useRouteMatch();\r\n  const [matchMaking, setMatchMaking] = useState(false);\r\n\r\n  const user = LocalStorage.getUser();\r\n\r\n  if (!(user && user.id)) {\r\n    return <Redirect to='/login' />;\r\n  }\r\n\r\n  s.emit('set_name', user.id);\r\n\r\n  const handleClick = () => {\r\n    s.emit('match_making', user.id);\r\n    setMatchMaking(true);\r\n  };\r\n\r\n  s.on('created_room', roomID => {\r\n    s.emit('join_game', roomID, () => {\r\n      setMatchMaking(false);\r\n      setRoom(roomID);\r\n      push(`${url}/with-human`);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div style={{ flexGrow: 1 }}>\r\n      <Spin\r\n        spinning={matchMaking}\r\n        size='large'\r\n        delay={500}\r\n        tip='Finding match...'\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            marginTop: 30\r\n          }}\r\n        >\r\n          <Card\r\n            hoverable\r\n            style={{ maxWidth: 350 }}\r\n            title='Play with Bot'\r\n            cover={<img src='/gameWithBot.PNG' alt='Play card' />}\r\n          >\r\n            <Link to={`${url}/with-bot`}>\r\n              <Button type='primary' block size='large'>\r\n                Play now\r\n              </Button>\r\n            </Link>\r\n          </Card>\r\n          <Card\r\n            hoverable\r\n            style={{ maxWidth: 350 }}\r\n            title='Play with Human'\r\n            cover={<img src='/gameWithHuman.PNG' alt='Play card' />}\r\n          >\r\n            <Button type='primary' block size='large' onClick={handleClick}>\r\n              Play now\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </Spin>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n","import { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport IndexPage from '../components/game/IndexPage';\r\nimport { setRoom } from '../actions/gameWithHuman';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setRoom: roomID => {\r\n      dispatch(setRoom(roomID));\r\n    },\r\n    push: url => {\r\n      dispatch(push(url));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(IndexPage);\r\n","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport socketio from '../../socketio';\r\nimport LocalStorage from '../../utils/LocalStorage';\r\n\r\nconst FormInput = ({ form, addMessage, roomID }) => {\r\n  const socket = socketio;\r\n\r\n  const {\r\n    getFieldDecorator,\r\n    getFieldValue,\r\n    validateFields,\r\n    resetFields\r\n  } = form;\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = LocalStorage.getUser();\r\n    if (!user) {\r\n      return;\r\n    }\r\n    validateFields(err => {\r\n      if (!err) {\r\n        const msg = getFieldValue('message');\r\n        socket.emit('new_message', {\r\n          roomID,\r\n          userID: user.id,\r\n          name: user.name,\r\n          msg\r\n        });\r\n\r\n        // xoa message tronng input\r\n        resetFields(['message']);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('has_message', data => {\r\n      addMessage(data.userID, data.name, data.msg);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      socket.off('has_message');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Form\r\n      layout='horizontal'\r\n      style={{ display: 'flex' }}\r\n      onSubmit={handleSubmit}\r\n      autoComplete='off'\r\n    >\r\n      <Form.Item style={{ marginBottom: 0, flexGrow: 1, marginRight: 20 }}>\r\n        {getFieldDecorator('message', {\r\n          initialValue: '',\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: 'Content is empty!'\r\n            }\r\n          ]\r\n        })(<Input placeholder='Your message...' />)}\r\n      </Form.Item>\r\n      <Form.Item style={{ marginBottom: 0 }}>\r\n        <Button type='primary' onClick={handleSubmit}>\r\n          Send\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedFormInput = Form.create('form_chat')(FormInput);\r\n\r\nexport default WrappedFormInput;\r\n","import { connect } from 'react-redux';\r\nimport WrappedFormInput from '../components/chat/FormInput';\r\nimport { setMessage } from '../actions/gameWithHuman';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    roomID: state.gameWithHuman.roomID\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addMessage: (id, name, msg) => {\r\n      dispatch(setMessage({ id, name, msg }));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedFormInput);\r\n","import React from 'react';\r\nimport { List } from 'antd';\r\nimport uuidv1 from 'uuid/v1';\r\n\r\nconst DisplayChats = ({ messages }) => {\r\n  return (\r\n    <List\r\n      itemLayout='vertical'\r\n      style={{ maxHeight: 150, overflowY: 'auto' }}\r\n      size='small'\r\n    >\r\n      {messages &&\r\n        messages.map(item => {\r\n          return (\r\n            <List.Item key={uuidv1()}>\r\n              <div>\r\n                <strong>{item.name}</strong>: &nbsp;\r\n                {item.msg}\r\n              </div>\r\n            </List.Item>\r\n          );\r\n        })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default DisplayChats;\r\n","import { connect } from 'react-redux';\r\nimport DisplayChats from '../components/chat/DisplayChats';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    messages: state.gameWithHuman.messages\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(DisplayChats);\r\n","import React from 'react';\r\nimport { Divider } from 'antd';\r\nimport FormChatContainer from '../../containers/FormChatContainer';\r\nimport DisplayChatContainer from '../../containers/DisplayChatContainer';\r\n\r\nconst ChatBox = () => {\r\n  return (\r\n    <>\r\n      <DisplayChatContainer />\r\n      <Divider style={{ margin: '12px 0' }} />\r\n      <FormChatContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, Button, Spin, Modal } from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ChatBox from '../chat/Chat';\r\nimport socketio from '../../socketio';\r\n// import Board from './Board';\r\n\r\nconst GameWithHuman = ({\r\n  isFetching,\r\n  roomID,\r\n  clearMatch,\r\n  fetchGameData,\r\n  setFetching\r\n}) => {\r\n  const s = socketio.open();\r\n  document.title = 'Play with human';\r\n\r\n  const [winner, setWinner] = useState(null);\r\n  const [winnerText, setWinnerText] = useState(null);\r\n\r\n  const [askModal, setAskModal] = useState(false);\r\n\r\n  // có một socket để fetch message và ván đấu về lại client\r\n  // data là một object gồm board, messages, xIsNext\r\n  useEffect(() => {\r\n    setFetching(true);\r\n\r\n    // emit fetch data\r\n    s.emit('fetch_game_data', roomID);\r\n\r\n    // nhận data\r\n    s.on('receive_game_data', data => {\r\n      const messages = [...data.messages];\r\n      fetchGameData({ messages });\r\n\r\n      setFetching(false);\r\n    });\r\n\r\n    s.on('show_result', (winnerID, winnerChar) => {\r\n      if (winnerID !== null) {\r\n        setWinner(winnerChar);\r\n        setWinnerText('Winner');\r\n      } else {\r\n        setWinner('XO');\r\n        setWinnerText('Draw');\r\n      }\r\n    });\r\n\r\n    s.on('competitor_ask_for_draw', () => {\r\n      setAskModal(true);\r\n    });\r\n\r\n    s.on('result_ask', () => {\r\n      setFetching(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      s.off('receive_game_data');\r\n      s.off('show_result');\r\n      s.off('competitor_ask_for_draw');\r\n      s.off('result_ask');\r\n      clearMatch();\r\n    };\r\n  }, []);\r\n\r\n  if (!roomID) {\r\n    return <Redirect to='/game' />;\r\n  }\r\n\r\n  const surrender = () => {\r\n    s.emit('surrender', roomID);\r\n  };\r\n\r\n  const handleBtnResult = () => {\r\n    clearMatch();\r\n  };\r\n\r\n  const handleBtnDraw = isAccepted => {\r\n    s.emit('result_ask_for_draw', isAccepted, roomID);\r\n    setAskModal(false);\r\n  };\r\n\r\n  const handleBtnAsk = () => {\r\n    setFetching(true);\r\n    s.emit('ask_for_draw', roomID);\r\n  };\r\n  return (\r\n    <div className='game-wrapper' style={{ flexGrow: 1 }}>\r\n      {/* <Prompt message='Are you sure you want to leave?' /> */}\r\n      <Spin tip='Loadding...' spinning={isFetching} size='large'>\r\n        <Row type='flex' justify='space-between'>\r\n          <Col xs={24} md={12}>\r\n            {/* <Board listPoints={points} board={board} winner={winner} /> */}\r\n            {/* <Board /> */}\r\n          </Col>\r\n\r\n          <Col xs={24} md={12}>\r\n            <div style={{ overflow: 'hidden' }}>\r\n              <Row gutter={20}>\r\n                <Col span={12}>history</Col>\r\n                <Col span={12}>\r\n                  <Row gutter={20}>\r\n                    <Col span={24}>\r\n                      <Card title='Chat Box' size='small'>\r\n                        <ChatBox />\r\n                      </Card>\r\n                    </Col>\r\n                    <Col span={24} style={{ marginTop: 20 }}>\r\n                      <Card title='Widget' size='small'>\r\n                        <Button type='default' style={{ marginRight: 10 }}>\r\n                          Undo\r\n                        </Button>\r\n                        <Button\r\n                          type='primary'\r\n                          style={{\r\n                            backgroundColor: '#2ecc71',\r\n                            marginRight: 10\r\n                          }}\r\n                          onClick={handleBtnAsk}\r\n                        >\r\n                          Ask for draw\r\n                        </Button>\r\n                        <Button type='danger' onClick={surrender}>\r\n                          Surrender\r\n                        </Button>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n\r\n      <Modal\r\n        title='Result'\r\n        visible={winner !== null}\r\n        onOk={handleBtnResult}\r\n        okText='Leave game'\r\n        cancelButtonProps={{\r\n          disabled: true\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center' }}>\r\n          <p style={{ marginBottom: 20, fontSize: 25, fontWeight: 700 }}>\r\n            {winnerText}\r\n          </p>\r\n          <p\r\n            style={{\r\n              fontWeight: 900,\r\n              fontSize: 100,\r\n              marginBottom: 0,\r\n              lineHeight: 1\r\n            }}\r\n            className={`player ${winner}`}\r\n          >\r\n            {winner}\r\n          </p>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title='Ask for a draw game'\r\n        visible={askModal}\r\n        okText='Yes'\r\n        cancelText='No'\r\n        onOk={() => handleBtnDraw(true)}\r\n        onCancel={() => handleBtnDraw(false)}\r\n      >\r\n        <p style={{ fontSize: 25 }}>\r\n          Your competitor ask you for a draw game. Do you agree?\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameWithHuman;\r\n","import { connect } from 'react-redux';\r\nimport GameWithHuman from '../components/game/GameWithHuman';\r\nimport {\r\n  clearMatch,\r\n  fetchGameData,\r\n  setFetching\r\n} from '../actions/gameWithHuman';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    roomID: state.gameWithHuman.roomID,\r\n    isFetching: state.gameWithHuman.isFetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    clearMatch: () => {\r\n      dispatch(clearMatch());\r\n    },\r\n    fetchGameData: data => {\r\n      dispatch(fetchGameData(data));\r\n    },\r\n    setFetching: status => {\r\n      dispatch(setFetching(status));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GameWithHuman);\r\n","import React from 'react';\r\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom';\r\nimport { Result } from 'antd';\r\nimport GameContainer from '../containers/GameContainer';\r\nimport GameIndexContainer from '../containers/GameIndexContainer';\r\nimport GameWithHumanContainer from '../containers/GameWithHumanContainer';\r\n\r\nconst GameScene = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      {/* route default: chọn giữa đánh với máy và người */}\r\n\r\n      <Route exact path={`${path}`}>\r\n        <GameIndexContainer />\r\n      </Route>\r\n      <Route exact path={`${path}/with-bot`}>\r\n        <GameContainer />\r\n      </Route>\r\n      <Route exact path={`${path}/with-human`}>\r\n        <GameWithHumanContainer />\r\n      </Route>\r\n      <Route path='*'>\r\n        <Result\r\n          status='404'\r\n          title='404'\r\n          subTitle='Sorry, the page you visited does not exist.'\r\n          extra={<Link to='/'>Back Home</Link>}\r\n        />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default GameScene;\r\n","import React from 'react';\r\nimport { Route, Switch, Link, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Result } from 'antd';\r\nimport RegisterContainer from './containers/RegisterContainer';\r\nimport LoginContainer from './containers/LoginContainer';\r\nimport PrivateRouteContainer from './containers/PrivateRouteContainer';\r\nimport AccountScene from './scenes/AccountScene';\r\nimport LayoutPage from './layout/LayoutPage';\r\nimport GameScene from './scenes/GameScene';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Switch>\r\n        <Route path='/login' component={LoginContainer} />\r\n        <Route path='/register' component={RegisterContainer} />\r\n\r\n        <PrivateRouteContainer path='/game'>\r\n          <LayoutPage>\r\n            <GameScene />\r\n          </LayoutPage>\r\n        </PrivateRouteContainer>\r\n\r\n        <PrivateRouteContainer exact path='/'>\r\n          {/* <LayoutPage>\r\n            <AccountScene />\r\n          </LayoutPage> */}\r\n          <Redirect to='/account' />\r\n        </PrivateRouteContainer>\r\n        <PrivateRouteContainer path='/account'>\r\n          <LayoutPage>\r\n            <AccountScene />\r\n          </LayoutPage>\r\n        </PrivateRouteContainer>\r\n\r\n        <Route path='*'>\r\n          <Result\r\n            status='404'\r\n            title='404'\r\n            subTitle='Sorry, the page you visited does not exist.'\r\n            extra={<Link to='/'>Back Home</Link>}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport configureStore, { history } from './store';\nimport './index.css';\nimport './utils/axios.config';\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}